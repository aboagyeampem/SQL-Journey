-- DATA CLEANING
-- Functions: LEFT, RIGHT, UPPER, LOWER

-- QUESTION 2
SELECT  LEFT(UPPER(name), 1) as first_letter, COUNT(*)
FROM accounts
GROUP BY 1
ORDER BY 2 DESC;


-- QUESTION 3
SELECT SUM(num), SUM(letter)
FROM (
       SELECT name, CASE WHEN(LEFT(UPPER(name),1) IN ('0','1','2','3','4','5','6','7','8','9'))
                      THEN 1 ELSE 0 END AS num,
                    CASE WHEN (LEFT(UPPER(name),1) IN ('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'))
                      THEN 1 ELSE 0 END letter
        FROM accounts
        ) first_character



-- DATA CLEANING
-- Functions: POSITION, STRPOS, SUBSTR

--Question1
SELECT *, LEFT(primary_poc, POSITION(' ' IN primary_poc)-1) AS first_name, 
            RIGHT(primary_poc, (LENGTH(primary_poc)-POSITION(' ' IN primary_poc))) AS last_name
FROM accounts;

--OR using STRPOS

SELECT *, LEFT(primary_poc, STRPOS(primary_poc, ' ')-1) first_name, 
            RIGHT(primary_poc, (LENGTH(primary_poc)-STRPOS(primary_poc, ' '))) last_name
FROM accounts;



-- CONTENATION
-- Combining First and Last Names into One Column: 
WITH merging AS (SELECT *, LEFT(primary_poc, STRPOS(primary_poc, ' ')-1) first_name, 
                    RIGHT(primary_poc, (LENGTH(primary_poc)-STRPOS(primary_poc, ' '))) last_name
                    FROM accounts)
SELECT CONCAT(first_name, ' ',last_name) full_name
FROM merging

--OR using || 
WITH merging AS (SELECT *, LEFT(primary_poc, STRPOS(primary_poc, ' ')-1) first_name, 
                    RIGHT(primary_poc, (LENGTH(primary_poc)-STRPOS(primary_poc, ' '))) last_name
                    FROM accounts)
SELECT first_name || ' ' ||last_name full_name
FROM merging


-- Contenation Quiz

--Question 1
WITH merging AS (SELECT *, LEFT(primary_poc, STRPOS(primary_poc, ' ')-1) first_name, 
                    RIGHT(primary_poc, (LENGTH(primary_poc)-STRPOS(primary_poc, ' '))) last_name, name AS company
                    FROM accounts)
SELECT first_name || ' ' || last_name AS full_name, company, CONCAT(LOWER(first_name), '.', LOWER(last_name), '@', LOWER(company), '.com') AS email_address
FROM merging


-- Question 2: Removing spaces in comany name
WITH merging AS (SELECT *, LEFT(primary_poc, STRPOS(primary_poc, ' ')-1) first_name, 
                    RIGHT(primary_poc, (LENGTH(primary_poc)-STRPOS(primary_poc, ' '))) last_name, name AS company
                    FROM accounts)
SELECT first_name || ' ' || last_name AS full_name, company, CONCAT(LOWER(first_name), '.', LOWER(last_name), '@', LOWER(TRIM(company)), '.com') AS email_address
FROM merging

-- OR Using REPLACE function
WITH merging AS (SELECT *, LEFT(primary_poc, STRPOS(primary_poc, ' ')-1) first_name, 
                    RIGHT(primary_poc, (LENGTH(primary_poc)-STRPOS(primary_poc, ' '))) last_name, name AS company
                    FROM accounts)
SELECT first_name || ' ' || last_name AS full_name, company, CONCAT(LOWER(first_name), '.', LOWER(last_name), '@', LOWER(REPLACE(company, ' ','')), '.com') AS email_address
FROM merging




--COALESCE
SELECT *
FROM accounts a
LEFT JOIN orders o
ON a.id = o.account_id
WHERE o.total IS NULL;

-- Question 2: Fill order.account_id with account.id 
SELECT COALESCE(o.id, a.id) filled_id, a.name, a.website, a.lat, a.long, a.primary_poc, a.sales_rep_id, o.*
FROM accounts a
LEFT JOIN orders o
ON a.id = o.account_id
WHERE o.total IS NULL;

-- Filling all Quantiy columns that are NULL with zero (0)
SELECT a.*, o.account_id,  COALESCE(o.standard_qty, 0) std, COALESCE(o.gloss_qty, 0) gloss, COALESCE(o.poster_qty, 0) poster,
        COALESCE(o.standard_amt_usd, 0) std_amt, COALESCE(o.gloss_amt_usd, 0), COALESCE(o.poster_amt_usd, 0) poster_amt 
FROM accounts a
LEFT JOIN orders o
ON a.id = o.account_id
WHERE o.total IS NULL